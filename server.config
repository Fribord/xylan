%% -*- mode: erlang -*-
%% Example server config file for the xylan application
%% Good practice is to make a local copy called xylan.config!
[
 %% SASL config
 {sasl, [
        {sasl_error_logger, {file, "log/sasl-error.log"}},
        {errlog_type, error},
        {error_logger_mf_dir, "log/sasl"},      % Log directory
        {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
        {error_logger_mf_maxfiles, 5}           % 5 files max
    ]},

 %% Lager config, see lager documentation
 {lager, 
  [{log_root, "log/lager"},
   {handlers, 
    [{lager_console_backend, info},
     {lager_file_backend, 
      [{file, "error.log"}, {level, error}, 
       {size, 10485760}, {date, "$D0"}, {count, 5}]},
     {lager_file_backend, 
      [{file, "console.log"}, {level, info}, 
       {size, 10485760}, {date, "$D0"}, {count, 5}]}
    ]}
  ]},
 
 %% xyw server config
 {xylan,
  [{mode, server},
   {id, "server"},   %% id of server (may be used when server is also client?)
   {port, [46122,
	   {"en1",2222},
	   {{127,0,0,1}, 2222}]},
   {client_port, 29390},  %% port where client connects
   {data_port,   29391},    %% client callback proxy port
   {auth_timeout, 5000},  %% client session auth timeout
   {data_timeout, 5000},  %% user initial data timeout
   
   {clients,  %% configure known clients
    [{"local",
      [
       {server_key, 3177648541185394227},   %% server is signing using this key
       {client_key, 12187761947737533676},  %% client is signing using this key
       {route,
	[
	 [{data, "SSH-2.0.*"}],   %% match port and initial
	 [{data, "GET .*"}]       %% match a specific url
	]}
      ]},

     {"mini",
      [
       {server_key, 8421305869361776827},  %% server is signing using this key
       {client_key, 8644215577236485799},  %% client is signing using this key
       {route,
	[
	 [{data, "SSH-2.0.*"}],   %% match port and initial
	 [{data, "GET .*"}]       %% match a specific url
	]}
      ]}

    ]}
  ]}


].

